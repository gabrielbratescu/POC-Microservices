plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.siouan.frontend-jdk11' version '6.0.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

frontend {
	nodeVersion = '16.1.0'
	packageJsonDirectory= file("${projectDir}/frontend")
	nodeInstallDirectory = file("${projectDir}/frontend/node")
	//cleanScript = 'run clean'
	assembleScript = 'run build'
	//checkScript = 'run check'
}

tasks.register('copyReactApp', Copy) {
	from "${projectDir}/frontend/build"
	into "${projectDir}/build/resources/main/public/."
}

resolveTestMainClassName.dependsOn(copyReactApp)

ext {
	set('springBootAdminVersion', "3.1.5")
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.zipkin.brave:brave-instrumentation-spring-web'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.kafka:spring-kafka'

	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
	runtimeOnly 'com.github.loki4j:loki-logback-appender:latest.release'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
